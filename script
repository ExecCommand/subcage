/* =========================================================================
   script.js - Behavior:
   - loading screen shows 5s on first visit (sessionStorage used)
   - plays optional industrial sound during loading (toggle below)
   - video thumbnails: when clicked inject iframe embed (YT) into box
   - Comments show where to put youtube embed links in index.html
   ========================================================================= */

/* ---------------- CONFIG ---------------- */
/* Toggle sound on loading (true = play; false = mute) */
const LOADING_SOUND_ENABLED = true;

/* Loading duration (ms) on first load */
const LOADING_DURATION = 5000;

/* ---------------- DOM references ---------------- */
const loadingScreen = document.getElementById("loading-screen");
const mainContent = document.getElementById("main-content");
const loadingAudio = document.getElementById("loading-audio");
const videoThumbs = document.querySelectorAll(".video-thumb");

/* ---------------- Loading behavior ---------------- */
window.addEventListener("load", () => {
  const firstLoad = !sessionStorage.getItem("loaded");

  if (LOADING_SOUND_ENABLED && loadingAudio) {
    // Attempt to play (may be blocked by browser on first interaction)
    loadingAudio.currentTime = 0;
    loadingAudio.volume = 0.9;
    const _play = loadingAudio.play();
    if (_play && _play.catch) {
      _play.catch(()=>{/* autoplay blocked; will stay muted */});
    }
  }

  if (firstLoad) {
    // show loading screen for defined duration
    setTimeout(() => {
      hideLoading();
      sessionStorage.setItem("loaded", "true");
    }, LOADING_DURATION);
  } else {
    // skip wait
    hideLoading();
  }
});

function hideLoading() {
  if (loadingScreen) loadingScreen.style.display = "none";
  if (mainContent) mainContent.classList.remove("hidden");
  // pause audio if playing
  if (loadingAudio && !loadingAudio.paused) {
    try { loadingAudio.pause(); loadingAudio.currentTime = 0; } catch(e){}
  }
}

/* ---------------- Video thumbnail -> inject iframe ----------------
   Expected: each .video-thumb element has attribute data-embed with a YT embed URL:
   example: data-embed="https://www.youtube.com/embed/VIDEO_ID?rel=0&modestbranding=1"
   When clicked, we replace the thumbnail with the iframe and autoplay=1 (if desired).
*/
videoThumbs.forEach(thumb => {
  thumb.addEventListener("click", (e) => {
    const embedUrl = thumb.getAttribute("data-embed") || "";
    if (!embedUrl) return;
    // Create iframe
    const iframe = document.createElement("iframe");
    // append autoplay param if not present
    const autoplay = embedUrl.includes('?') ? '&autoplay=1' : '?autoplay=1';
    iframe.src = embedUrl + autoplay;
    iframe.setAttribute("frameborder", "0");
    iframe.setAttribute("allow", "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture");
    iframe.setAttribute("allowfullscreen", "true");
    // Replace thumb content with iframe
    const parentBox = thumb.parentElement;
    parentBox.innerHTML = ""; // remove thumb markup
    parentBox.appendChild(iframe);
  });
});

/* ---------------- Accessibility: keyboard activation for thumbs ---------------- */
videoThumbs.forEach(thumb => {
  thumb.setAttribute("tabindex", "0");
  thumb.addEventListener("keydown", (e) => {
    if (e.key === "Enter" || e.key === " ") {
      e.preventDefault();
      thumb.click();
    }
  });
});

/* ---------------- Small helper: if user wants to skip loading screen manually,
   open console and call: hideLoading(); ---------------- */
